# Simple DevOps Project CI CD Using Node JS 

# Pre-requisites:
1. Jenkins Server
2. Nodejs Server
# Set up with Jenkins Application
Manage Jenkins Plugins:
1. Publish over ssh
2. Nodejs
3. Update the Server add details and Configuration tab and test connection

# Make it ready Nodejs application
1. Install docker and start Start the services
2. Create dockeradmin user
3. Install Nodejs
4. Create a folder called Docker in /opt/docker and give owner permission to docker file for the user dockeradmin
Follow the below steps

##### Steps 1 - Install Node Js on Amazonlinux/Ubuntu Machine 

``` sh 

sudo apt update
amazon-linux-extras install epel -y
yum install nodejs -y
or 
if it ubuntu follow below steps
sudo apt install nodejs

sudo apt install npm

nodejs -v  // To check the node JS version 

```

##### Step 2 -  Download the Publish Over SSH plugins 

``` sh

Key -- define the private Key ( you will get from .pem while when you will open as text file)

ssh Server - 

Name - define the name of the server. 
HostName - Provide the IP address of your server.
UserName - Provide the user name here ex. if we are using Ubuntu ec2 instance then username is ubuntu (docker admin)

Click Save and Apply 

```

##### Step 3 -  Create the Free Style Node JS project .

``` sh 

Git URL - https://emanohar25@bitbucket.org/emanohar25/sample_nodejs.git

WebHook Connection URL - http://IPADDRESS/github-webhook/ (push)

BUILD - npm install  // to download all the dependecines 
      - npm test  // to perform test case execution 

tar czf Node.tar.gz node_modules index.js package.json public app.json     
```

##### Step 4 - Post Build Action Define below details.
``` sh 

Source file : **/*.gz 

Exec Command 

mv ./home/ubuntu/one/node-js-sample/Node.tar.gz /home/ubuntu/test/Node.tar.gz;
cd /home/ubuntu/test/
tar -xf Node.tar.gz ;
docker rmi nodeimage;
docker stop nodecontainer;
docker rm nodecontainer;
docker build -t nodeimage .;
docker run -d --name nodecontainer -p 5001:5000 nodeimage;

```

##### Step 5 - Docker File in Node Js server 

``` sh 
FROM node:latest

MAINTAINER Manohar 

RUN echo "Tryin to build my first application"

COPY . /var/www

WORKDIR /var/www

RUN npm install

EXPOSE 3000

ENTRYPOINT ["npm","start"]
```
